# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger: none
pr: none

resources:
 repositories:
   - repository: microsoft-graph-docs
     type: github
     endpoint: microsoftgraph
     name: microsoftgraph/microsoft-graph-docs
     ref: master
   - repository: apidoctor
     type: github
     endpoint: microsoftgraph
     name: microsoftgraph/apidoctor
     ref: zengin/snippets
   - repository: microsoft-graph-explorer-api
     type: github
     endpoint: microsoftgraph
     name: microsoftgraph/microsoft-graph-explorer-api
     ref: dev
   - repository: MSGraph-SDK-Code-Generator
     type: github
     endpoint: microsoftgraph
     name: microsoftgraph/MSGraph-SDK-Code-Generator
     ref: master
   - repository: msgraph-sdk-dotnet
     type: github
     endpoint: microsoftgraph
     name: microsoftgraph/msgraph-sdk-dotnet
     ref: dev

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  apidoctorPath: 'apidoctor'
  apidoctorSolution: '$(apidoctorPath)/**/*.sln'

steps:
- checkout: microsoft-graph-docs
  clean: true
  fetchDepth: 1
  persistCredentials: true

- checkout: apidoctor
  clean: true
  fetchDepth: 1
  persistCredentials: true

- checkout: microsoft-graph-explorer-api
  clean: true
  fetchDepth: 1
  persistCredentials: true

- checkout: MSGraph-SDK-Code-Generator
  clean: true
  fetchDepth: 1
  submodules: recursive
  persistCredentials: true

- checkout: self
  clean: true
  fetchDepth: 1
  persistCredentials: true

- checkout: msgraph-sdk-dotnet
  clean: true
  fetchDepth: 1
  persistCredentials: true

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'microsoft-graph-explorer-api\CodeSnippetsReflection.App\CodeSnippetsReflection.App.csproj'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # release folder can change based on .NET core version, so search recursively in bin folder
      $snippetGeneratorPath = (Get-ChildItem C:\github\microsoft-graph-explorer-api\CodeSnippetsReflection.App\bin\Release *App.exe -Recurse).FullName
      Write-Host "Path to snippet generator tool: $snippetGeneratorPath"
      Write-Host "##vso[task.setvariable variable=snippetGeneratorPath]$snippetGeneratorPath"

#- task: NuGetToolInstaller@1
#  displayName: "Install Nuget.exe"

#- task: NuGetCommand@2
#  displayName: "Restore Packages for  apidoctor Tool"
#  inputs:
#    restoreSolution: '$(apidoctorSolution)'